- git branch -m new-name :
when you want to change the name of the branch (you should be on the branch)

- git reset --soft HEAD^1 :
when you want to remove the last commit and have it in your staging area.


- git push --set-upstream origin <name of branch> :
when you have a new branch, you should have it remotly as well.when you set the upstream , you will have that branch remotly.
after that you can track you changes by push or pull (you just do it once)


- git branch -a:
it will show you all the remote and local branches.
(be carefull you might see some remote branches that they are not exsit, it happens when you delete you branches remotly and you do not update your local machine)
when you do git fetch you update your branch but for just having all the branches which are exsit( remote and local) and get rid of the deleted ones you can 
use : git fetch --prune


- git fetch --prune :
 git fetch does not remove remote branches that no longer have a counterpart branch on the remote.
 In order to do that, you explicitly need to prune the list of remote branches.
 

- git branch -r :
will show you an updated list of branches that really exist on the remote:


- 1) git fetch
  2) git rebase origin/master  :
when you want to update your branch with the new changes has been applied to the master.


- git reset --soft HEAD^1 :
Committed files to Staging Area


- git reset HEAD git commands.txt :
Staging to UnStage :(use "git reset HEAD ..." to unstage)

- git revert:
git revert <SHA-of-commit-to-revert>
will undo the changes that were made by the provided commit
creates a new commit to record the changes

- git revert -m 1 <SHA-..>:
revert a merged commit

- git status : 
command will display a lot of information depending on the state of your files,
the working directory, and the repository.


- git commit --amend:
to update the most-recent commit instead of creating a new one.


- git log --all --decorate --oneline --graph :
shows the graph and commit number and texts

- git branch -d (name of the branch):
delete the branch

- git rm --cache -r .idea :
for deleting the .idea folder

- kill all the ports : 
kill -9 $(lsof -ti:port1,port2, ...)
